#! /usr/bin/env node

const doc =
`
Tape-like JavaScript test runner for MarkLogic.

Usage:
  mltap <test>...
  mltap <test>... --output <file>
  mltap <test>... --stdout
  mltap --help

Options:
  <test>                         A list of tests, usually a glob
  -o <file>, --output <file>     Send output to a file
  --stdout                       Send to standard out
  -h, --help                     Help
`;

const opts = require('docopt').docopt(doc);

const marklogic = require('marklogic');
const conn = {
  host: 'localhost',  // TODO: Parameterize me
  port: '8000',       // TODO: Parameterize me
  user: 'admin',      // TODO: Parameterize me
  password: 'admin',  // TODO: Parameterize me 
  authType: 'digest', // TODO: Parameterize me
}
const client = marklogic.createDatabaseClient(conn);

/*
 * Assumes external variables:
 *   Array<string> tests - The paths to the tests, relative to the root
 *   string root - The root context to resolve module imports. Assumes file system
 */
const bootstrap = `require('/mltap/mltap')(tests, root, 0);`;

// TODO: Figure out 
client.eval(bootstrap, 
  {
    root: process.cwd(), //'/Users/jmakeig/Workspaces/tmptest', 
    tests: opts['<test>'], //['test/test.test.sjs', 'test/lib.test.sjs',]
  })
  .result(
    response => process.stdout.write(response[0].value + '\n'),
    error => { console.dir(error); process.exit(1); }
  );

// const http = require('http');

// const request = require('request');

// request.post('http://localhost:8992/remote.sjs', {
//   auth: {
//     user: 'admin',
//     pass: 'admin',
//     sendImmediately: false,
//   },
//   headers: {
//     'Content-Type': 'application/x-www-form-urlencoded'
//   },
//   body: opts['<test>'].map(item => `tests=${item}`).join('&'),
// }, (error, response, body) => console.log(body));